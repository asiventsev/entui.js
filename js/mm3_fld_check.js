// Generated by CoffeeScript 1.9.0
(function() {
  var Mm3FldCheck;

  Mm3FldCheck = (function() {
    function Mm3FldCheck(target, prefix, fld_name, meta, html_pars, value, callbacks) {
      this.target = target;
      this.prefix = prefix;
      this.fld_name = fld_name;
      this.meta = meta;
      this.html_pars = html_pars;
      this.set_val(value || this.meta["default"]);
      this.fld = null;
    }

    Mm3FldCheck.prototype.build = function() {
      this.target.empty();
      this.target.parent().find("#" + this.prefix + "-label").text('');
      this.fld = $("<input type=\"checkbox\" id=\"" + this.prefix + "\" />");
      this.set_pars(this.fld, this.html_pars);
      this.target.append(this.fld, this.html_pars);
      this.target.append(this.meta.label || '');
      this.fld.prop("checked", this.value);
      return this;
    };

    Mm3FldCheck.prototype.val = function(value) {
      if (value === null) {
        this.value = this.fld.prop("checked");
      } else {
        this.set_val(value);
        this.fld.prop("checked", this.value);
      }
      return this.value;
    };

    Mm3FldCheck.prototype.disabled = function(is_disabled) {
      return this.fld.prop("disabled", is_disabled);
    };

    Mm3FldCheck.prototype.set_val = function(value) {
      return this.value = value && (value !== '') && (value !== '0') && (value !== 'false') && (value !== 0);
    };

    Mm3FldCheck.prototype.set_pars = function(target, hash_pars) {
      var key, _i, _len, _ref, _results;
      if (hash_pars == null) {
        hash_pars = {};
      }
      _ref = _.keys(hash_pars);
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        key = _ref[_i];
        _results.push(target.attr(key, hash_pars[key]));
      }
      return _results;
    };

    return Mm3FldCheck;

  })();

  Mm3.prototype.Mm3EditForm.prototype.Mm3_fld_check = Mm3FldCheck;

}).call(this);
